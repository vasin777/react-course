React
(в не react обычно используется multi page application, несколько страниц переключаем между собой сслками)
1. single page application - единая страница приложения, исплользуется в react, только одна страница index.html
представление данных идет из js в одну страницу
плюсы:
+высокая скорость
+не надо подгружать заново header и footer при переходе на другую страницу
минусы:
-первичный размер данных гораздо больше так как необходимо подгурзить сразу большое 
колличество данных, первая загрузка дольше 
но потом приложение работает гораздо быстрее.
2. React - компонентный подход (вкладывая один компонент в другой 
все с водится к корневому компоненту который находится в index.html, корневой компонент который вкладывается
в index.html обычно называется app)
3. Взаимодействие с DOM деревом происходит под капотом React 
(React под копотом строит "дерево React элементов" дерево это более легковесная копия дом дерево в браузере)
-Согласование - если в узлах дерева произошли какие то изменения react не переносит эти изменения сразу а 
создает новое дерево с обновленными значениями и сравнивает с предыдущим. 
(после того как алгоритмы react нашли разницу происходит фаза визуализации и отрисовки, 
далее react предоставляет пиоритетность на изменение элементов
 и при смене мы выдим плавную картинку с высокоц частотой кадров)
!!! - В общем за визуализацию и обновления данных отвечает React давая разработчику сосредоточиться 
на логике по работе с данными.
4. Установка React (проверяем есть ли npx "npx -v" если покажет версию то все нормально и устанавливаем реакт
командой "npx create-react-app название_проекта" если вы в корне директории проекта 
то вместо названия проекта можно просто поставить точку ".")


